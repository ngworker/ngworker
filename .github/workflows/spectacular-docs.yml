name: Spectacular documentation

env:
  BASE_BRANCH: ${{ github.event.pull_request.base.ref }}
  is-main-branch: ${{ github.ref == 'refs/heads/main' }}
  is-pull-request: ${{ github.event_name  == 'pull_request' }}
  NODE_OPTIONS: --max-old-space-size=6144
  node-version: 12.x
  NX_BRANCH: ${{ github.event.number }}
  NX_RUN_GROUP: ${{ github.run_id }}
  PNPM_STORE_PATH: ~/.pnpm-store
  project-name: spectacular-docs

on:
  push:
    branches:
      - main
  pull_request: {}
  workflow_dispatch: {}

jobs:
  affected:
    name: Is affected?
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest

    outputs:
      is-affected: ${{ steps.affected.outputs.is-affected }}

    steps:
      # needed for nx affected command
      - name: 'PR: Check out source code with current branch Git history'
        if: ${{ env.is-pull-request == 'true' }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # needed for nx affected command
      - name: 'PR: Fetch base branch Git history'
        if: ${{ env.is-pull-request == 'true' }}
        run: git fetch --no-tags --depth=1 origin $BASE_BRANCH
      - name: 'Merge: Check out source code'
        if: ${{ env.is-pull-request == 'false' }}
        uses: actions/checkout@v2

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}

      - run: npm install --global pnpm
      - run: pnpm config set store-dir $PNPM_STORE_PATH
      - name: Cache PNPM store
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - run:
          pnpm install --reporter silent --frozen-lockfile false
          --verify-store-integrity false
      - run: pnpm store prune

      - id: affected
        uses: ./.github/actions/affected
        with:
          base:
            ${{ env.is-main-branch == 'true' && 'HEAD~1' || format('origin/{0}',
            env.BASE_BRANCH) }}
          project: ${{ env.project-name }}

  build:
    name: Build
    if:
      ${{ github.ref == 'refs/head/main' && needs.affected.outputs.is-affected
      == 'true' }}
    needs: affected
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}

      - run: npm install --global pnpm
      - run: pnpm config set store-dir $PNPM_STORE_PATH
      - name: Cache PNPM store
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - run:
          pnpm install --reporter silent --frozen-lockfile false
          --verify-store-integrity false
      - run: pnpm store prune

      - run: pnpx nx build ${{ env.project-name }}

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.project-name }}
          path: dist/packages/${{ env.project-name }}
          if-no-files-found: error

  deploy:
    name: 'Merge: Deploy'
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build
    runs-on: ubuntu-latest

    steps:
      # needed for JamesIves/github-pages-deploy-action
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: ${{ env.package-name }}
          path: ./${{ env.package-name }}

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          branch: gh-pages
          folder: ./${{ env.package-name }}/
