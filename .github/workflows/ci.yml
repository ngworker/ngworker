name: '@ngworker CI pipeline'

permissions:
  contents: read

env:
  BASE_BRANCH: ${{ github.event.pull_request.base.ref }}
  NODE_OPTIONS: --max-old-space-size=6144
  NX_BRANCH: ${{ github.event.number }}
  NGWORKER_NX_PARALLEL: 2
  NX_RUN_GROUP: ${{ github.run_id }}
  spectacular_docs_artifact_name: spectacular-docs
  spectacular_docs_path: dist/packages/spectacular-docs/

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  # Group concurrency on workflow, then:
  # - Is merge run? Group on branch name (`refs/heads/main`)
  # - Is pull request? Group on pull request branch name, for example `feat/add-awesome-feature`
  group: >-
    ${{ github.workflow }}-${{
      github.event_name == 'push'
        && github.ref
        || github.head_ref
    }}

  # Run merge workflows in sequence to prevent parallel deployments and releases
  # Cancel stale pull request runs in progress for the same branch
  cancel-in-progress: ${{ github.event_name != 'push' }}

jobs:
  format:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: git fetch --no-tags --depth=1 origin $BASE_BRANCH

      - name: Set up Node.js and npm
        uses: ./.github/actions/setup-node

      - run: npm run format:check -- --base=origin/$BASE_BRANCH

  lint:
    runs-on: ubuntu-latest

    steps:
      - if: github.event_name == 'push' && github.ref_name == 'main'
        uses: actions/checkout@v4
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        run: git fetch --no-tags --depth=1 origin $BASE_BRANCH

      - name: Set up Node.js and npm
        uses: ./.github/actions/setup-node

      - if: github.event_name == 'push' && github.ref_name == 'main'
        run: npm run lint -- --parallel=$NGWORKER_NX_PARALLEL
      - if: github.event_name == 'pull_request'
        run: npm run affected:lint -- --base=origin/$BASE_BRANCH --parallel=$NGWORKER_NX_PARALLEL

  test:
    runs-on: ubuntu-latest

    steps:
      - if: github.event_name == 'push' && github.ref_name == 'main'
        uses: actions/checkout@v4
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        run: git fetch --no-tags --depth=1 origin $BASE_BRANCH

      - name: Set up Node.js and npm
        uses: ./.github/actions/setup-node

      - if: github.event_name == 'push' && github.ref_name == 'main'
        run: npm run test -- --configuration=ci --parallel=$NGWORKER_NX_PARALLEL
      - if: github.event_name == 'pull_request'
        run: npm run affected:test -- --base=origin/$BASE_BRANCH --configuration=ci --parallel=$NGWORKER_NX_PARALLEL

  build:
    runs-on: ubuntu-latest

    steps:
      - if: github.event_name == 'push' && github.ref_name == 'main'
        uses: actions/checkout@v4
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        run: git fetch --no-tags --depth=1 origin $BASE_BRANCH

      - name: Set up Node.js and npm
        uses: ./.github/actions/setup-node

      - if: github.event_name == 'push' && github.ref_name == 'main'
        run: npm run build -- --exclude=spectacular-docs
      - if: github.event_name == 'pull_request'
        run: npm run affected:build -- --exclude=spectacular-docs --base=origin/$BASE_BRANCH
      - name: '[Spectacular] Upload package build artifact'
        uses: actions/upload-artifact@v4
        with:
          name: spectacular-package
          path: dist/packages/spectacular
          if-no-files-found: warn

  docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js and npm
        uses: ./.github/actions/setup-node

      - run: npm run nx -- build spectacular-docs --parallel=$NGWORKER_NX_PARALLEL
      - run: npm run nx -- typecheck spectacular-docs
      - name: '[Merge][Spectacular] Upload docs app'
        if: github.event_name == 'push' && github.ref_name == 'main'
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: ${{ env.spectacular_docs_artifact_name }}
          path: ${{ env.spectacular_docs_path }}
  deploy-docs:
    needs: docs
    if: github.event_name == 'push' && github.ref_name == 'main'
    runs-on: ubuntu-latest
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: '[Merge][Spectacular] Download docs app'
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.spectacular_docs_artifact_name }}
          path: ${{ env.spectacular_docs_path }}
      - name: '[Merge][Spectacular] Set up GitHub Pages'
        uses: actions/configure-pages@v5
      - name: '[Merge][Spectacular] Upload docs app to GitHub Pages'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.spectacular_docs_path }}
      - name: '[Merge][Spectacular] Deploy docs app to GitHub Pages'
        id: deployment
        uses: actions/deploy-pages@v4

  e2e:
    runs-on: ubuntu-latest

    steps:
      - if: github.event_name == 'push' && github.ref_name == 'main'
        uses: actions/checkout@v4
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        run: git fetch --no-tags --depth=1 origin $BASE_BRANCH

      - name: Set up Node.js and npm
        uses: ./.github/actions/setup-node

      - if: github.event_name == 'push' && github.ref_name == 'main'
        run: npm run e2e -- --parallel=$NGWORKER_NX_PARALLEL
      - if: github.event_name == 'pull_request'
        run: npm run affected:e2e -- --base=origin/$BASE_BRANCH --parallel=$NGWORKER_NX_PARALLEL
