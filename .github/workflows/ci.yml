name: '@ngworker CI pipeline'

env:
  BASE_BRANCH: ${{ github.event.pull_request.base.ref }}
  NODE_OPTIONS: --max-old-space-size=6144
  NX_BRANCH: ${{ github.event.number }}
  NX_MAX_PARALLEL: 2
  NX_RUN_GROUP: ${{ github.run_id }}

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  # Group concurrency on workflow, then:
  # - Is merge run? Group on branch name (`refs/heads/main`)
  # - Is pull request? Group on pull request branch name, for example `feat/add-awesome-feature`
  group: >-
    ${{ github.workflow }}-${{
      github.event_name == 'push'
        && github.ref
        || github.head_ref
    }}
  # Run merge workflows in sequence to prevent parallel deployments and releases
  # Cancel stale pull request runs in progress for the same branch
  cancel-in-progress: ${{ github.event_name != 'push' }}

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - if: github.event_name == 'push' && github.ref_name == 'main'
        uses: actions/checkout@v3
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        run: git fetch --no-tags --depth=1 origin $BASE_BRANCH

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: yarn
      - run: yarn install --frozen-lockfile --non-interactive

      - if: github.event_name == 'push' && github.ref_name == 'main'
        run: yarn lint --parallel=$NX_MAX_PARALLEL
      - if: github.event_name == 'pull_request'
        run:
          yarn affected:lint --base=origin/$BASE_BRANCH
          --parallel=$NX_MAX_PARALLEL

  test:
    runs-on: ubuntu-latest

    steps:
      - if: github.event_name == 'push' && github.ref_name == 'main'
        uses: actions/checkout@v3
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        run: git fetch --no-tags --depth=1 origin $BASE_BRANCH

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: yarn
      - run: yarn install --frozen-lockfile --non-interactive

      - if: github.event_name == 'push' && github.ref_name == 'main'
        run: yarn test --parallel=$NX_MAX_PARALLEL
      - if: github.event_name == 'pull_request'
        run:
          yarn affected:test --base=origin/$BASE_BRANCH
          --parallel=$NX_MAX_PARALLEL

  build:
    runs-on: ubuntu-latest

    steps:
      - if: github.event_name == 'push' && github.ref_name == 'main'
        uses: actions/checkout@v3
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        run: git fetch --no-tags --depth=1 origin $BASE_BRANCH

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: yarn
      - run: yarn install --frozen-lockfile --non-interactive

      - if: github.event_name == 'push' && github.ref_name == 'main'
        run: yarn build --exclude=spectacular-docs
      - if: github.event_name == 'pull_request'
        run:
          yarn affected:build --exclude=spectacular-docs
          --base=origin/$BASE_BRANCH
      - name: '[Spectacular] Upload package build artifact'
        uses: actions/upload-artifact@v3
        with:
          name: spectacular-package
          path: dist/packages/spectacular
          if-no-files-found: warn

  docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: yarn
      - run: yarn install --frozen-lockfile --non-interactive

      - run: yarn nx build spectacular-docs --parallel=$NX_MAX_PARALLEL

      - name: '[Merge] Deploy docs to GitHub Pages'
        if: github.event_name == 'push' && github.ref_name == 'main'
        uses: JamesIves/github-pages-deploy-action@4.1.3
        with:
          branch: gh-pages
          folder: dist/packages/spectacular-docs

  e2e:
    runs-on: ubuntu-latest

    steps:
      - if: github.event_name == 'push' && github.ref_name == 'main'
        uses: actions/checkout@v3
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        run: git fetch --no-tags --depth=1 origin $BASE_BRANCH

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: yarn
      - run: yarn install --frozen-lockfile --non-interactive

      - if: github.event_name == 'push' && github.ref_name == 'main'
        run: yarn e2e --parallel=$NX_MAX_PARALLEL
      - if: github.event_name == 'pull_request'
        run:
          yarn affected:e2e --base=origin/$BASE_BRANCH
          --parallel=$NX_MAX_PARALLEL
