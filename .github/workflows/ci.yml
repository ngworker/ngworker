name: '@ngworker CI pipeline'

env:
  BASE_BRANCH: origin/main
  NODE_OPTIONS: --max_old_space_size=4096
  NX_BRANCH: ${{ github.event.number }}
  NX_RUN_GROUP: ${{ github.run_id }}
  PNPM_STORE_PATH: ~/.pnpm-store

on:
  push:
    branches: [main]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-20.04

    steps:
      - if: github.event_name == 'push'
        uses: actions/checkout@v2
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - if: github.event_name == 'pull_request'
        run: git fetch --no-tags --prune --depth=5 origin main

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 12.x

      - run: npm install --global pnpm
      - run: pnpm config set store-dir $PNPM_STORE_PATH
      - name: Cache PNPM store
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - run:
          pnpm install --reporter silent --frozen-lockfile false
          --verify-store-integrity false
      - run: pnpm store prune

      - if: github.event_name == 'push'
        run: pnpm lint
      - if: github.event_name == 'pull_request'
        run: pnpm affected:lint -- --base=$BASE_BRANCH

  test:
    runs-on: ubuntu-20.04

    steps:
      - if: github.event_name == 'push'
        uses: actions/checkout@v2
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - if: github.event_name == 'pull_request'
        run: git fetch --no-tags --prune --depth=5 origin main

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 12.x

      - run: npm install --global pnpm
      - run: pnpm config set store-dir $PNPM_STORE_PATH
      - name: Cache PNPM store
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - run:
          pnpm install --reporter silent --frozen-lockfile false
          --verify-store-integrity false
      - run: pnpm store prune

      - if: github.event_name == 'push'
        run: pnpm test
      - if: github.event_name == 'pull_request'
        run: pnpm affected:test -- --base=$BASE_BRANCH

  build:
    runs-on: ubuntu-20.04

    steps:
      - if: github.event_name == 'push'
        uses: actions/checkout@v2
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - if: github.event_name == 'pull_request'
        run: git fetch --no-tags --prune --depth=5 origin main

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 12.x

      - run: npm install --global pnpm
      - run: pnpm config set store-dir $PNPM_STORE_PATH
      - name: Cache PNPM store
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - run:
          pnpm install --reporter silent --frozen-lockfile false
          --verify-store-integrity false
      - run: pnpm store prune

      - if: github.event_name == 'push'
        run: pnpm build
      - if: github.event_name == 'pull_request'
        run: pnpm affected:build -- --base=$BASE_BRANCH
      - uses: actions/upload-artifact@v2
        with:
          name: spectacular-package
          path: dist/packages/spectacular
          if-no-files-found: warn

  e2e:
    runs-on: ubuntu-20.04

    steps:
      - if: github.event_name == 'push'
        uses: actions/checkout@v2
      # needed for nx affected command
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - if: github.event_name == 'pull_request'
        run: git fetch --no-tags --prune --depth=5 origin main

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 12.x

      - run: npm install --global pnpm
      - run: pnpm config set store-dir $PNPM_STORE_PATH
      - name: Cache PNPM store
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - run:
          pnpm install --reporter silent --frozen-lockfile false
          --verify-store-integrity false
      - run: pnpm store prune

      - run: pnpm e2e
